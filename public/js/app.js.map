{"version":3,"sources":["app/BattleWave.coffee","app/src/Clock.coffee","app/src/Drawable.coffee","app/src/ScreenSpace.coffee","app/src/Surface.coffee","app/src/WarpGrid.coffee","node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAthGA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/js/app.js","sourcesContent":["\"use strict\";\nvar BattleWave, Clock, ScreenSpace, Surface, WarpGrid;\n\nClock = require('src/Clock');\n\nSurface = require('src/Surface');\n\nScreenSpace = require('src/ScreenSpace');\n\nWarpGrid = require('src/WarpGrid');\n\nmodule.exports = BattleWave = (function() {\n  function BattleWave(target1) {\n    this.target = target1;\n    this.clock = new Clock();\n    this.surface = new Surface(this.target);\n    this.screen = new ScreenSpace(this.surface);\n    this.grid = new WarpGrid(this.surface.width(), this.surface.height());\n    this.surface.add(this.grid);\n    this.loopId = null;\n  }\n\n  BattleWave.prototype.deltaTime = function() {\n    return this.clock.deltaTime();\n  };\n\n  BattleWave.prototype.start = function() {\n    console.log('[BattleWave] Starting');\n    return this.loopId = requestAnimationFrame(this.gameLoop.bind(this));\n  };\n\n  BattleWave.prototype.stop = function() {\n    console.log('[BattleWave] Stopping');\n    return cancelAnimationFrame(this.loopId);\n  };\n\n  BattleWave.prototype.gameLoop = function() {\n    this.surface.clear();\n    this.surface.render();\n    return this.loopId = requestAnimationFrame(this.gameLoop.bind(this));\n  };\n\n  return BattleWave;\n\n})();\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  var bw, target;\n  console.log('[BattleWave] Initializing');\n  target = document.getElementById('target');\n  bw = new BattleWave(target);\n  return bw.start();\n});\n","\"use strict\";\nvar Clock;\n\nmodule.exports = Clock = (function() {\n  var getCurrentTime;\n\n  function Clock() {\n    this.time = getCurrentTime();\n  }\n\n  Clock.prototype.deltaTime = function() {\n    var delta, now;\n    now = getCurrentTime();\n    delta = now - this.time;\n    this.time = now;\n    return delta / 1000;\n  };\n\n  getCurrentTime = function() {\n    return (new Date()).getTime();\n  };\n\n  return Clock;\n\n})();\n","\"use strict\";\nvar Drawable;\n\nmodule.exports = Drawable = (function() {\n  function Drawable() {\n    null;\n  }\n\n  Drawable.prototype.draw = function(surface) {\n    return null;\n  };\n\n  return Drawable;\n\n})();\n","\"use strict\";\nvar Drawable, ScreenSpace,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nDrawable = require('src/Drawable');\n\nmodule.exports = ScreenSpace = (function(superClass) {\n  extend(ScreenSpace, superClass);\n\n  function ScreenSpace(surface) {\n    this.surface = surface;\n    this.width = 0;\n  }\n\n  ScreenSpace.prototype.draw = function() {\n    return void 0;\n  };\n\n  return ScreenSpace;\n\n})(Drawable);\n","\"use strict\";\nvar Surface;\n\nmodule.exports = Surface = (function() {\n  var registerResize, resizeScene;\n\n  function Surface(target) {\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setClearColor(0x1A1A1A, 1);\n    this.renderer.autoClear = false;\n    this.createScene();\n    this.setupComposer();\n    (registerResize.bind(this))();\n    (resizeScene.bind(this))(window);\n    target.appendChild(this.renderer.domElement);\n  }\n\n  Surface.prototype.createScene = function() {\n    console.log('[Surface] Creating scene');\n    this.camera = new THREE.PerspectiveCamera(45, this.width(), this.height(), 0.1, 10000);\n    this.scene = new THREE.Scene();\n    this.scene.add(this.camera);\n    this.light = new THREE.AmbientLight(0xFFFFFF);\n    this.scene.add(this.light);\n    this.axis = new THREE.AxisHelper(75);\n    this.scene.add(this.axis);\n    this.cube = new THREE.Mesh(new THREE.CubeGeometry(200, 200, 200), new THREE.MeshNormalMaterial());\n    return this.scene.add(this.cube);\n  };\n\n  Surface.prototype.setupComposer = function() {\n    var copy;\n    console.log('[Surface] Setting up composer');\n    this.composer = new THREE.EffectComposer(this.renderer);\n    this.composer.addPass(new THREE.RenderPass(this.scene, this.camera));\n    this.fxaa = new THREE.ShaderPass(THREE.FXAAShader);\n    this.fxaa.uniforms['resolution'].value = new THREE.Vector2(1 / this.width(), 1 / this.height());\n    this.composer.addPass(this.fxaa);\n    copy = new THREE.ShaderPass(THREE.CopyShader);\n    copy.renderToScreen = true;\n    return this.composer.addPass(copy);\n  };\n\n  Surface.prototype.width = function() {\n    return window.innerWidth;\n  };\n\n  Surface.prototype.height = function() {\n    return window.innerHeight;\n  };\n\n  Surface.prototype.clear = function() {\n    return this.renderer.clear();\n  };\n\n  Surface.prototype.add = function(obj) {\n    console.log(\"[Surface] Adding object \" + (obj.inner().type));\n    return this.scene.add(obj.inner());\n  };\n\n  Surface.prototype.render = function() {\n    return this.composer.render();\n  };\n\n  resizeScene = function(win) {\n    var height, width;\n    console.log('[Surface] Resizing');\n    height = win.innerHeight;\n    width = win.innerWidth;\n    this.cube.position.x = width / 2;\n    this.cube.position.y = 0;\n    this.cube.position.z = height / 2;\n    this.camera.position.x = width / 2;\n    this.camera.position.y = 800;\n    this.camera.position.z = height / 2;\n    this.camera.lookAt(new THREE.Vector3(width / 2, 0, height / 2));\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n    this.composer.setSize(width, height);\n    if (this.fxaa) {\n      return this.fxaa.uniforms['resolution'].value = new THREE.Vector2(1 / width, 1 / height);\n    }\n  };\n\n  registerResize = function() {\n    var _this;\n    _this = this;\n    return window.addEventListener('resize', function(e) {\n      return (resizeScene.bind(_this))(e.target);\n    });\n  };\n\n  return Surface;\n\n})();\n","\"use strict\";\nvar WarpGrid;\n\nmodule.exports = WarpGrid = (function() {\n  var GRID_COUNT;\n\n  GRID_COUNT = 150;\n\n  function WarpGrid(width, height) {\n    var i, j, ref, ref1, x, z;\n    this.geo = new THREE.Geometry();\n    for (z = i = 0, ref = GRID_COUNT; 0 <= ref ? i <= ref : i >= ref; z = 0 <= ref ? ++i : --i) {\n      for (x = j = 0, ref1 = GRID_COUNT; 0 <= ref1 ? j <= ref1 : j >= ref1; x = 0 <= ref1 ? ++j : --j) {\n        this.geo.vertices.push(new THREE.Vector3(x * (width / GRID_COUNT), 0, z * (width / GRID_COUNT)));\n      }\n    }\n    this.lines = new THREE.Line(this.geo, new THREE.LineBasicMaterial({\n      color: 0xFFFFFF,\n      linewidth: 1\n    }));\n  }\n\n  WarpGrid.prototype.inner = function() {\n    return this.lines;\n  };\n\n  return WarpGrid;\n\n})();\n","/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n  if (window._ar) return;\n  window._ar = true;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    },\n\n    javascript: function(){\n      var scripts = [].slice.call(document.querySelectorAll('script'));\n      var textScripts = scripts.map(function(script) { return script.text }).filter(function(text) { return text.length > 0 });\n      var srcScripts = scripts.filter(function(script) { return script.src });\n\n      var loaded = 0;\n      var all = srcScripts.length;\n      var onLoad = function() {\n        loaded = loaded + 1;\n        if (loaded === all) {\n          textScripts.forEach(function(script) { eval(script); });\n        }\n      }\n\n      srcScripts\n        .forEach(function(script) {\n          var src = script.src;\n          script.remove();\n          var newScript = document.createElement('script');\n          newScript.src = cacheBuster(src);\n          newScript.async = true;\n          newScript.onload = onLoad;\n          document.head.appendChild(newScript);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */\n"]}